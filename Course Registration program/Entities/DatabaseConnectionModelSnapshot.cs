// <auto-generated />
using Course_Registration_program.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Course_Registration_program.Entities
{
    [DbContext(typeof(DatabaseConnection))]
    partial class DatabaseConnectionModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Course_Registration_program.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("courseID"));

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("courseNumber")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("courseID");

                    b.ToTable("course");
                });

            modelBuilder.Entity("Course_Registration_program.Models.Instructor", b =>
                {
                    b.Property<int>("instructorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("instructorID"));

                    b.Property<int>("courseID")
                        .HasColumnType("integer");

                    b.Property<string>("emailID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("instructorID");

                    b.HasIndex("courseID");

                    b.ToTable("instructor");
                });

            modelBuilder.Entity("Course_Registration_program.Models.Student", b =>
                {
                    b.Property<int>("studentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("studentID"));

                    b.Property<string>("emailID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("phoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("studentID");

                    b.ToTable("student");
                });

            modelBuilder.Entity("Course_Registration_program.Models.StudentCourse", b =>
                {
                    b.Property<int>("assignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("assignmentID"));

                    b.Property<int>("courseID")
                        .HasColumnType("integer");

                    b.Property<int>("studentID")
                        .HasColumnType("integer");

                    b.HasKey("assignmentID");

                    b.HasIndex("courseID");

                    b.HasIndex("studentID");

                    b.ToTable("studentCourse");
                });

            modelBuilder.Entity("Course_Registration_program.Models.Instructor", b =>
                {
                    b.HasOne("Course_Registration_program.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Course_Registration_program.Models.StudentCourse", b =>
                {
                    b.HasOne("Course_Registration_program.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Course_Registration_program.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
